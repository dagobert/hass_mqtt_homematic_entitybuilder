name: "__ENTITYNAME__"
unique_id: "__UNIQUEID__"
state_topic: "__CCUMQTTTOPIC__/status/__DEVICEID__:__CHANNELID__/ACTIVITY_STATE"
state_opening: opening
state_closing: closing
state_stopped: stopped
value_template: >
  {% if value_json.val == 1 %}
    opening
  {% elif value_json.val == 2 %}
    closing
  {% elif value_json.val == 3 %}
    stopped
  {% else %}
    UNKNOWN
  {% endif %}
position_topic: "__CCUMQTTTOPIC__/status/__DEVICEID__:3/LEVEL"
position_open: 100
position_closed: 0
position_template: '{{ (value_json.val * 100) |int }}'
command_topic: "__HASSVIRTUALHMTOPIC__/set/__DEVICEID__/FOR_COMMAND_TOPIC"
payload_close: "close"
payload_open: "open"
payload_stop: "stop"
set_position_topic: "__CCUMQTTTOPIC__/set/__DEVICEID__:__CHANNELID__/LEVEL"
set_position_template: '{{ position / 100 |float(0) }}'
device_class: shutter
# Classification of non-primary entities
# "config" of entity that changes configuration
# "dignostic" for entities showing config params or diagnostics
#entity_category:
availability_mode: latest
availability:
  - topic: "__CCUMQTTTOPIC__/status/__DEVICEID__:0/UNREACH"
    value_template: "{{ value_json.val }}"
    payload_available: false
    payload_not_available: true
json_attributes_topic: "__CCUMQTTTOPIC__/status/__DEVICEID__:__CHANNELID__/LEVEL"
json_attributes_template: >
  {
    "ccu_state": "{{ value_json.val }}",
    "ccu_device": "{{ value_json.hm.device }}",
    "ccu_deviceName": "{{ value_json.hm.deviceName }}",
    "ccu_deviceType": "{{ value_json.hm.deviceType }}",
    "ccu_channel": "{{ value_json.hm.channel }}",
    "ccu_channelType": "{{ value_json.hm.channelType }}",
    "ccu_channelIndex": "{{ value_json.hm.channelIndex }}",
    "ccu_datapoint": "{{ value_json.hm.datapoint }}",
    "ccu_datapointType": "{{ value_json.hm.datapointType }}",
    "ccu_valuePrevious": {{ value_json.hm.valuePrevious }},
    "ccu_valueStable": {{ value_json.hm.valueStable }},
    "ccu_rooms": {{ value_json.hm.rooms | tojson }},
    "ccu_functions": {{ value_json.hm.functions | tojson }},
    "ccu_ts": "{{ (value_json.hm.ts / 1000) | int | timestamp_local }}",
    "ccu_tsPrevious": "{{ (value_json.hm.tsPrevious / 1000) | int | timestamp_local }}"
  }
qos: 0

