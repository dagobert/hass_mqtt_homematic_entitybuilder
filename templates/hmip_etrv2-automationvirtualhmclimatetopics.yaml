- id: __UNIQUEID___action
  alias: __ENTITYNAME___action
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777level
      to: "0"
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777level
      from: "0"
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777setpointmode
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777setpointtemperature
      to: "4.5"
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777setpointtemperature
      from: "4.5"
  action:
    - service: mqtt.publish
      data_template:
        topic: '__HASSVIRTUALHMTOPIC__/status/__CHANNEL__/ACTION'
        payload: >-
          {% if states('sensor.__BASEENTITYNAME__777level')|float > 0 %}
            heating
          {% elif is_state('sensor.__BASEENTITYNAME__777level', "0") 
               and is_state('sensor.__BASEENTITYNAME__777setpointmode', "1") 
               and is_state('sensor.__BASEENTITYNAME__777setpointtemperature', "4.5") %}
            off
          {% else %}
            idle
          {% endif %}
        retain: true
        qos: 0


## Publishes the mode command for a hm climate device, triggered by
#  a topic which was in turn published by the mqtt.climate entity
#   This is necessary since mqtt.climate is not flexible enough to
#   handle Homematic's way of publishing and subscribing to data
- id: __UNIQUEID___modecommand
  alias: __ENTITYNAME___modecommand
  hide_entity: true
  initial_state: true
  trigger:
    - platform: mqtt
      topic: "__HASSVIRTUALHMTOPIC__/set/__CHANNEL__/MODE_COMMAND"
  action:
    - service: mqtt.publish
      data_template:
        topic: "__CCUMQTTTOPIC__/set/__CHANNEL__/CONTROL_MODE"
        payload: >-
          {% if trigger.payload == "auto" %}
            0
          {% elif trigger.payload == "heat" %}
            1
          {% elif trigger.payload == "off" %}
            1
          {% else %}
            not supported MODE_COMMAND value {{ trigger.payload }}
          {% endif %}
        retain: true
        qos: 0
    - condition: or
      conditions:
        - condition: template
          value_template: >-
            {{ trigger.payload == "heat" }}
        - condition: template
          value_template: >-
            {{ trigger.payload == "off" }}
    # TODO Need to find a standard room temperature
    - service: mqtt.publish
      data_template:
        topic: "__CCUMQTTTOPIC__/set/__CHANNEL__/SET_POINT_TEMPERATURE"
        payload: >-
          {% if trigger.payload == "heat" %}
            20
          {% elif trigger.payload == "off" %}
            4.5
          {% endif %}
        retain: true
        qos: 0


## Publishes the mode state of a hm climate device, triggered by 
#  mqtt SET_POINT_MODE and sensor.setpointtemperature
#   This is necessary since mqtt.climate is not flexible enough to
#   handle Homematic's way of publishing data
- id: __UNIQUEID___modestate
  alias: __ENTITYNAME___modestate
  hide_entity: true
  initial_state: true
  trigger:
    - platform: mqtt
      topic: "__CCUMQTTTOPIC__/status/__CHANNEL__/SET_POINT_MODE"
    - platform: state
      entity_id: sensor.__BASEENTITYNAME__777setpointtemperature
      to: "4.5"
  action:
    - service: mqtt.publish
      data_template:
        topic: "__HASSVIRTUALHMTOPIC__/status/__CHANNEL__/MODE_STATE"
        payload: >-
          {% if is_state("sensor.__BASEENTITYNAME__777setpointmode", "0") %}
            auto
          {% elif is_state("sensor.__BASEENTITYNAME__777setpointmode", "1") and not 
               is_state("sensor.__BASEENTITYNAME__777setpointtemperature", "4.5") %}
            heat
          {% elif is_state("sensor.__BASEENTITYNAME__777setpointmode", "1") and 
               is_state("sensor.__BASEENTITYNAME__777setpointtemperature", "4.5") %}
            off
          {% elif is_state("sensor.__BASEENTITYNAME__777setpointmode", "2") %}
            vacation (not supported)
          {% else %}
            unknown state
          {% endif %}
        retain: true
        qos: 0

